// <auto-generated />
using System;
using AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccessData.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210607000805_resto")]
    partial class resto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("FormaEntregaId");

                    b.ToTable("Comanda");
                });

            modelBuilder.Entity("Domain.Models.ComandaMercaderia", b =>
                {
                    b.Property<int>("ComandaMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("ComandaMercaderiaId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("MercaderiaId");

                    b.ToTable("ComandaMercaderia");
                });

            modelBuilder.Entity("Domain.Models.FormaEntrega", b =>
                {
                    b.Property<int>("FormaEntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormaEntregaId");

                    b.ToTable("FormaEntrega");

                    b.HasData(
                        new
                        {
                            FormaEntregaId = 1,
                            Descripcion = "Salon"
                        },
                        new
                        {
                            FormaEntregaId = 2,
                            Descripcion = "Delivery"
                        },
                        new
                        {
                            FormaEntregaId = 3,
                            Descripcion = "Pedidos Ya"
                        });
                });

            modelBuilder.Entity("Domain.Models.Mercaderia", b =>
                {
                    b.Property<int>("MercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("MercaderiaId");

                    b.HasIndex("TipoMercaderiaId");

                    b.ToTable("Mercaderia");

                    b.HasData(
                        new
                        {
                            MercaderiaId = 1,
                            Imagen = "https://s1.eestatic.com/2021/01/22/ciencia/nutricion/553206479_171070440_1024x576.jpg",
                            Ingredientes = "Fetas de jamon",
                            Nombre = "Jamon",
                            Precio = 150,
                            Preparacion = "Cortar fetas de jamon",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 2,
                            Imagen = "https://lacteoselpuente.com.ar/assets/img/picadita/picada_queso_premium.png",
                            Ingredientes = "Queso comun, azul y roquefort",
                            Nombre = "Queso",
                            Precio = 130,
                            Preparacion = "Picada con los distintos tipos de queso",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 3,
                            Imagen = "https://okdiario.com/img/2019/01/17/pizza-de-atun-con-aceitunas-negras-655x368.jpg",
                            Ingredientes = "Harina, queso, salsa y aceitunas negras",
                            Nombre = "Pizza con aceitunas",
                            Precio = 350,
                            Preparacion = "Hornear pizza y agregar aceitunas",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 4,
                            Imagen = "https://unaricareceta.com/wp-content/uploads/2020/01/Webp.net-resizeimage-95.jpg",
                            Ingredientes = "Ravioles de ricota, salsa fileto y albahaca",
                            Nombre = "Ravioles de ricota",
                            Precio = 400,
                            Preparacion = "Hervir ravioles y colocar salsa",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 5,
                            Imagen = "https://s3.amazonaws.com/arc-wordpress-client-uploads/infobae-wp/wp-content/uploads/2018/08/09173312/asado.jpg",
                            Ingredientes = "Carne y sal",
                            Nombre = "Asado a la parrilla",
                            Precio = 480,
                            Preparacion = "Asar la carne",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 6,
                            Imagen = "https://infoagro.com.ar/wp-content/uploads/2020/04/cerveza-artesanal-en-crisis-3.jpg",
                            Ingredientes = "Cerveza artesanal",
                            Nombre = "Cerveza artesanal",
                            Precio = 200,
                            Preparacion = "Cerveza estacionada",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 7,
                            Imagen = "https://s1.eestatic.com/2021/01/22/ciencia/nutricion/553206479_171070440_1024x576.jpg",
                            Ingredientes = "Lechuga, nueces, hinojo y hongos",
                            Nombre = "Ensalada Waldorf",
                            Precio = 150,
                            Preparacion = "Cortar ingredientes y mezclar en una fuente",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 8,
                            Imagen = "http://resizer.sevilla.abc.es/resizer/resizer.php?imagen=https://sevilla.abc.es/gurme//wp-content/uploads/sites/24/2012/06/postres-helados.jpg&nuevoancho=1920",
                            Ingredientes = "Bochas de helado de chocolate, americana, crema y cereza",
                            Nombre = "Postre helado",
                            Precio = 280,
                            Preparacion = "Colocar bochas de helado con crema y luego la cereza",
                            TipoMercaderiaId = 10
                        });
                });

            modelBuilder.Entity("Domain.Models.TipoMercaderia", b =>
                {
                    b.Property<int>("TipoMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoMercaderiaId");

                    b.ToTable("TipoMercaderia");

                    b.HasData(
                        new
                        {
                            TipoMercaderiaId = 1,
                            Descripcion = "Entrada"
                        },
                        new
                        {
                            TipoMercaderiaId = 2,
                            Descripcion = "Minutas"
                        },
                        new
                        {
                            TipoMercaderiaId = 3,
                            Descripcion = "Pastas"
                        },
                        new
                        {
                            TipoMercaderiaId = 4,
                            Descripcion = "Parrilla"
                        },
                        new
                        {
                            TipoMercaderiaId = 5,
                            Descripcion = "Pizzas"
                        },
                        new
                        {
                            TipoMercaderiaId = 6,
                            Descripcion = "Sandwich"
                        },
                        new
                        {
                            TipoMercaderiaId = 7,
                            Descripcion = "Ensalada"
                        },
                        new
                        {
                            TipoMercaderiaId = 8,
                            Descripcion = "Bebidas"
                        },
                        new
                        {
                            TipoMercaderiaId = 9,
                            Descripcion = "Cerveza Artesanal"
                        },
                        new
                        {
                            TipoMercaderiaId = 10,
                            Descripcion = "Postres"
                        });
                });

            modelBuilder.Entity("Domain.Models.Comanda", b =>
                {
                    b.HasOne("Domain.Models.FormaEntrega", "FormaEntrega")
                        .WithMany()
                        .HasForeignKey("FormaEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaEntrega");
                });

            modelBuilder.Entity("Domain.Models.ComandaMercaderia", b =>
                {
                    b.HasOne("Domain.Models.Comanda", "Comanda")
                        .WithMany()
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Mercaderia", "Mercaderia")
                        .WithMany()
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Mercaderia");
                });

            modelBuilder.Entity("Domain.Models.Mercaderia", b =>
                {
                    b.HasOne("Domain.Models.TipoMercaderia", "TipoMercaderia")
                        .WithMany()
                        .HasForeignKey("TipoMercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMercaderia");
                });
#pragma warning restore 612, 618
        }
    }
}
